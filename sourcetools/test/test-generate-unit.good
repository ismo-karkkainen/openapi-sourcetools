####COMMAND Unit tests
####CODE 0
####OUT
ok: same: Number is not string
ok: same: Hash is not string
ok: same: Number is not Hash
ok: same: Equal numbers
ok: same: Different types
ok: same: Different lengths
ok: same: Different keys
ok: same: Same contents
ok: same: Same contents ignoring summary
ok: same: Same contents ignoring description
ok: same: Same contents ignoring description and summary
ok: reference: New name added
ok: reference: Same object yields same reference
ok: reference: No new name added
ok: reference: No new name added either
ok: reference: No new name added with prefix
ok: reference: New reference added with prefix
ok: reference: Reference starts with prefix
ok: Components.reference: New name added
ok: Components.reference: Same object yields same reference
ok: Components.reference: No new name added
ok: Components.reference: No new name added either
ok: Components.reference: No new name added with prefix
ok: Components.reference: New reference added with prefix
ok: Components.reference: Reference starts with prefix
ok: gather_array_refs: ref1 present on not required
ok: gather_array_refs: ref2 present on not required
ok: gather_array_refs: ref3 present on not required
ok: gather_array_refs: ref1 present on not required, pre-filled
ok: gather_array_refs: ref2 present on not required, pre-filled
ok: gather_array_refs: ref3 present on not required, pre-filled
ok: gather_array_refs: ref1 present on required, pre-filled
ok: gather_array_refs: ref2 present on required, pre-filled
ok: gather_array_refs: ref3 present on required, pre-filled
ok: gather_array_refs: ref1 present on required
ok: gather_array_refs: ref2 present on required
ok: gather_array_refs: ref3 present on required
ok: gather_refs: ra found
ok: gather_refs: rb found
ok: gather_refs: rc found
ok: SchemaInfo:initialize: Solo ends ref
ok: SchemaInfo:initialize: RefSolo ends ref
ok: SchemaInfo:initialize: Second ends ref
ok: SchemaInfo:initialize: LoopA ends ref
ok: SchemaInfo:initialize: LoopB ends ref
ok: SchemaInfo:initialize: LoopC ends ref
ok: SchemaInfo:initialize: LoopD ends ref
ok: SchemaInfo:initialize: LoopE ends ref
ok: SchemaInfo:initialize: Loop1 ends ref
ok: SchemaInfo:initialize: Loop6 ends ref
ok: SchemaInfo:initialize: Loop2 ends ref
ok: SchemaInfo:initialize: Loop5 ends ref
ok: SchemaInfo:initialize: Loop3 ends ref
ok: SchemaInfo:initialize: Loop4 ends ref
ok: SchemaInfo:initialize: Solo has no direct refs
ok: SchemaInfo:initialize: RefSolo has one direct ref
ok: SchemaInfo:initialize: RefSolo refers to Solo
ok: SchemaInfo:initialize: Second has one direct ref
ok: SchemaInfo:initialize: Second refers to Solo
ok: SchemaInfo:initialize: LoopA has two direct refs
ok: SchemaInfo:initialize: LoopA refers to Second
ok: SchemaInfo:initialize: LoopA refers to LoopB
ok: SchemaInfo:initialize: LoopB has two direct refs
ok: SchemaInfo:initialize: LoopB refers to Solo
ok: SchemaInfo:initialize: LoopB refers to LoopA
ok: SchemaInfo:initialize: LoopC has one direct ref
ok: SchemaInfo:initialize: LoopC refers to LoopD
ok: SchemaInfo:initialize: LoopD has one direct ref
ok: SchemaInfo:initialize: LoopD refers to LoopE
ok: var_or_method_value: attribute found
ok: var_or_method_value: @attribute found
ok: var_or_method_value: method found
ok: var_or_method_value: missing name throws ArgumentError
####ERR
####COMMAND Docs unit tests
####CODE 0
####OUT
ok: add: Added name
ok: add: Stored ok
ok: add: Not added
ok: add: Stored still ok
ok: add: Unset name
####ERR
####COMMAND Output unit tests
####CODE 0
####OUT
ok: join: correct number of lines
ok: join: indented 1
ok: join: indented 3
ok: join: indented 3 again
ok: join: indented 1 less
ok: join: not indented
ok: join: indented by step
ok: join: indented step less
ok: join: indented same as previous
ok: join: indented two steps more
ok: join: indented same
ok: join: last indent set
ok: join: 5 lines
ok: join: not indented
ok: join: indented 1
ok: join: indented 4 and replaced
ok: join: indented 2 and replaced
ok: join: indented 5, replaced 2
ok: join: last indent 0 after nil
####ERR
####COMMAND Helper unit tests
####CODE 0
####OUT
ok: store_parents/parent: Top level no parent
ok: store_parents/parent: single parent is top
ok: store_parents/parent: Offspring third parent is top
ok: store_parents/parent: Offspring fourth parent is top
ok: store_parents/parent: Child first parent is single
ok: store_parents/parent: Child second parent is single
ok: store_parents/parent: Child first2 parent is first
ok: store_parents/parent: Other object has no parent
ok: store_parents/parent: Keys have no parent
ok: store_parents/parent: String value has no parent
ok: category_and_name: Not string
ok: category_and_name: ref not string
ok: category_and_name: Not reference string
ok: category_and_name: ref not reference string
ok: category_and_name: Not reference string
ok: category_and_name: category found
ok: category_and_name: name found
ok: category_and_name: category found again
ok: category_and_name: name found again
ok: dereference: invalid
ok: dereference: no category
ok: dereference: no name
ok: dereference: valid
ok: basename: invalid
ok: basename: missing part
ok: basename: name returned
ok: parameters: no parameters
ok: parameters: one parameter
ok: parameters: name matches
ok: parameters: one parameter
ok: parameters: name matches
ok: parameters: two parameters
ok: parameters: name matches
ok: parameters: name matches
ok: parameters: no local parameters
ok: parameters: no local parameters
####ERR
####COMMAND Loaders unit tests
####CODE 0
####OUT
ok: loaders: Has loaders
ok: loaders: Loader is a method
ok: loaders: Loader is a method
ok: loaders: Loader is a method
ok: loaders: Loader is a method
ok: gem_loader: Standard error raised
ok: gem_loader: Rejects plain name
ok: gem_loader: Gem loaded
ok: ruby_loader: Standard error raised on error in file
ok: ruby_loader: Standard error raised on missing file
ok: ruby_loader: Rejects other name
ok: ruby_loader: Changed to loaded file directory
ok: ruby_loader: File loaded
ok: yaml_loader: No filename
ok: yaml_loader: No name
ok: yaml_loader: No name, no prefix
ok: yaml_loader: Standard error raised
ok: yaml_loader: Rejects plain name
ok: yaml_loader: File loaded
ok: yaml_loader: name defined
ok: yaml_loader: File loaded with extension
ok: yaml_loader: ext defined
ok: bin_loader: No filename
ok: bin_loader: No name
ok: bin_loader: Standard error raised
ok: bin_loader: Rejects plain name
ok: bin_loader: File loaded
ok: bin_loader: test defined
####ERR
####COMMAND Task unit tests
####CODE 0
####OUT
ok: initialize: No template info raises ArgumentError
ok: initialize: Source set
ok: initialize: Template name set
ok: initialize: Template loaded
ok: initialize: No name
ok: initialize: Not executable
ok: initialize: Not discarded
ok: initialize: x not set
ok: initialize: Source set
ok: initialize: Template name set
ok: initialize: Template stored
ok: internal_generate: Gen defined
ok: internal_generate: Returns expected value
ok: internal_generate: Exception raised
ok: generate: Gen defined
ok: generate: Returns expected value
ok: generate: Internal exception handled
ok: output_name: Gen defined
ok: output_name: Output name present
ok: output_name: Output name returned
ok: output_name: Gen defined
ok: output_name: Output name not set
ok: output_name: Template name used
ok: output_name: Gen defined
ok: output_name: Output name not set
ok: output_name: No template name to use
ok: WriteTask: nil arguments raise ArgumentError
ok: WriteTask: nil name raises ArgumentError
ok: WriteTask: nil contents raise ArgumentError
ok: WriteTask: Name set
ok: WriteTask: output_name ok
ok: WriteTask: Contents returned
ok: WriteTask: Not executable
####ERR
).to_s); _erbout.<< "\n".freeze
####COMMAND Gen unit tests
####CODE 0
####OUT
ok: mod_attr_reader: Has read-only attribute.
ok: mod_attr_accessor: Has readable attribute.
ok: mod_attr_accessor: Has writable attribute.
ok: dafaults: doc nil
ok: dafaults: outdir nil
ok: dafaults: docs set
ok: dafaults: in_name nil
ok: dafaults: in_basename nil
ok: dafaults: tasks set
ok: dafaults: tasks is empty
ok: dafaults: g set
ok: dafaults: g is empty
ok: dafaults: a nil
ok: dafaults: h nil
ok: dafaults: t nil
ok: dafaults: task_index nil
ok: dafaults: loaders set
ok: dafaults: loaders is empty
ok: setup: doc set
ok: setup: outdir set
ok: setup: in_name set
ok: setup: in_basename set
ok: setup: tasks set
ok: setup: tasks has default task
####ERR
####COMMAND Generate unit tests
####CODE 0
####OUT
ok: executable_bits_on: all exe on
ok: executable_bits_on: ug exe on
ok: executable_bits_on: u exe on
ok: executable_bits_on: unchanged
ok: executable_bits_on: a exe on
ok: executable_bits_on: short u exe on
ok: executable_bits_on: all rwx
ok: executable_bits_on: o exe on
ok: executable_bits_on: unchanged
ok: executable_bits_on: too short bu exe on
####ERR
