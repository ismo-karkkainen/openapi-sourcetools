####COMMAND Unit tests
####CODE 0
####OUT
ok: same: Number is not string
ok: same: Hash is not string
ok: same: Number is not Hash
ok: same: Equal numbers
ok: same: Different types
ok: same: Different lengths
ok: same: Different keys
ok: same: Same contents
ok: same: Same contents ignoring summary
ok: same: Same contents ignoring description
ok: same: Same contents ignoring description and summary
ok: reference: New name added
ok: reference: Same object yields same reference
ok: reference: No new name added
ok: reference: No new name added either
ok: reference: No new name added with prefix
ok: reference: New reference added with prefix
ok: reference: Reference starts with prefix
ok: Components.reference: New name added
ok: Components.reference: Same object yields same reference
ok: Components.reference: No new name added
ok: Components.reference: No new name added either
ok: Components.reference: No new name added with prefix
ok: Components.reference: New reference added with prefix
ok: Components.reference: Reference starts with prefix
ok: gather_array_refs: ref1 present on not required
ok: gather_array_refs: ref2 present on not required
ok: gather_array_refs: ref3 present on not required
ok: gather_array_refs: ref1 present on not required, pre-filled
ok: gather_array_refs: ref2 present on not required, pre-filled
ok: gather_array_refs: ref3 present on not required, pre-filled
ok: gather_array_refs: ref1 present on required, pre-filled
ok: gather_array_refs: ref2 present on required, pre-filled
ok: gather_array_refs: ref3 present on required, pre-filled
ok: gather_array_refs: ref1 present on required
ok: gather_array_refs: ref2 present on required
ok: gather_array_refs: ref3 present on required
ok: gather_refs: ra found
ok: gather_refs: rb found
ok: gather_refs: rc found
ok: SchemaInfo:initialize: Solo ends ref
ok: SchemaInfo:initialize: RefSolo ends ref
ok: SchemaInfo:initialize: Second ends ref
ok: SchemaInfo:initialize: LoopA ends ref
ok: SchemaInfo:initialize: LoopB ends ref
ok: SchemaInfo:initialize: LoopC ends ref
ok: SchemaInfo:initialize: LoopD ends ref
ok: SchemaInfo:initialize: LoopE ends ref
ok: SchemaInfo:initialize: Loop1 ends ref
ok: SchemaInfo:initialize: Loop6 ends ref
ok: SchemaInfo:initialize: Loop2 ends ref
ok: SchemaInfo:initialize: Loop5 ends ref
ok: SchemaInfo:initialize: Loop3 ends ref
ok: SchemaInfo:initialize: Loop4 ends ref
ok: SchemaInfo:initialize: Solo has no direct refs
ok: SchemaInfo:initialize: RefSolo has one direct ref
ok: SchemaInfo:initialize: RefSolo refers to Solo
ok: SchemaInfo:initialize: Second has one direct ref
ok: SchemaInfo:initialize: Second refers to Solo
ok: SchemaInfo:initialize: LoopA has two direct refs
ok: SchemaInfo:initialize: LoopA refers to Second
ok: SchemaInfo:initialize: LoopA refers to LoopB
ok: SchemaInfo:initialize: LoopB has two direct refs
ok: SchemaInfo:initialize: LoopB refers to Solo
ok: SchemaInfo:initialize: LoopB refers to LoopA
ok: SchemaInfo:initialize: LoopC has one direct ref
ok: SchemaInfo:initialize: LoopC refers to LoopD
ok: SchemaInfo:initialize: LoopD has one direct ref
ok: SchemaInfo:initialize: LoopD refers to LoopE
ok: var_or_method_value: attribute found
ok: var_or_method_value: @attribute found
ok: var_or_method_value: method found
ok: var_or_method_value: missing name throws ArgumentError
####ERR
